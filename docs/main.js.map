{"version":3,"sources":["./src/app/product/products/products.component.ts","./src/app/product/products/products.component.html","./src/app/state-transitions-config/app-event.model.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/state-transitions-config/state-transitions.ts","./src/app/state-transitions-manager/state-transitions-manager.component.ts","./src/app/product/product/product.component.ts","./src/app/product/product/product.component.html","./src/app/state-transitions-manager/app-data-store.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/state-transitions-config/app-events.enum.ts","./src/app/base/base.component.ts","./src/app/state-transitions-config/app-states.enum.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/state-transitions-config/app-data.model.ts","./src/app/layout/layout.component.ts","./src/app/layout/layout.component.html","./src/app/product/product.model.ts","./src/app/app-routing.module.ts","./src/app/product/products.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AppEventModel } from 'src/app/state-transitions-config/app-event.model';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { AppData } from '../../state-transitions-config/app-data.model';\r\nimport { AppState } from '../../state-transitions-config/app-states.enum';\r\nimport { Product } from '../product.model';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css']\r\n})\r\nexport class ProductsComponent extends BaseComponent implements OnInit {\r\n\r\n  products: Product[] = [];\r\n\r\n  constructor(protected router: Router) {\r\n    super(router);\r\n  }\r\n\r\n  ngOnInit(): void { \r\n    this.products = this.appEventModel.appData.products;\r\n  }\r\n\r\n  // a handler for the user raised event\r\n  // delegate the event handling to the base class\r\n  handlePoductEvent(evt: string, productId: any) {\r\n    const appData = new AppData();\r\n    appData.product.id = productId;\r\n    this.handleAppEvent(evt, AppState.PRODUCTSVIEW, appData);\r\n  }\r\n}\r\n","\r\n<h4>List of Products</h4>\r\n\r\n<div *ngFor=\"let product of products;\">\r\n  <a [routerLink]='' (click)=\"handlePoductEvent('product', product.id)\">{{product.name}}</a>\r\n</div>\r\n\r\n<p>&nbsp;</p>\r\n<p>\r\n</p>","import { AppEvent } from \"./app-events.enum\";\r\nimport { AppState } from \"./app-states.enum\";\r\nimport { AppData } from \"./app-data.model\";\r\n\r\nexport class AppEventModel {\r\n    appEvent: AppEvent;\r\n    appState: AppState;\r\n    appData: AppData;\r\n    message: any;\r\n\r\n    constructor() {\r\n        this.appState = AppState.UNKNOWN;\r\n        this.appEvent = AppEvent.home;\r\n        this.appData = new AppData();\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseComponent } from '../base/base.component';\r\n\r\n/**\r\n * This Angular component displays the home page content\r\n */\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent extends BaseComponent implements OnInit {\r\n\r\n  constructor(protected router: Router) {\r\n    super(router);\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n}\r\n","Home works!","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AppDataStoreService } from '../state-transitions-manager/app-data-store.service';\r\nimport { AppData } from './app-data.model';\r\nimport { AppEventModel } from './app-event.model';\r\nimport { AppEvent } from './app-events.enum';\r\nimport { AppState } from './app-states.enum';\r\n\r\n/**\r\n * The following state transitions correspond to the SPA tht we need to develop\r\n * The five columns are: Initial State, pre-event, process, post-event and final state\r\n * State Transitions corresponding to eror events like products_error are not considered\r\n * here but can be easily added as aditional transitions\r\n * \r\n  UNKNOWN       -> home     -> processHome()     -> home_success     -> HOMEVIEW\r\n  HOMEVIEW      -> products -> processProducts() -> products_success -> PRODUCTSVIEW\r\n  --\r\n  PRODUCTSVIEW  -> product  -> processProduct()  -> product_success  -> PRODUCTVIEW\r\n  PRODUCTSVIEW  -> home     -> processHome()     -> home_success     -> HOMEVIEW\r\n  --\r\n  PRODUCTVIEW   -> products -> processProducts() -> products_success -> PRODUCTSVIEW\r\n  PRODUCTVIEW   -> home     -> processHome()     -> home_success     -> HOMEVIEW\r\n *\r\n*/\r\n\r\n/**\r\n * Configure valid initial states that can raise the three events - home, products and product\r\n */\r\nexport const PreEventToInitialStatesConfig = {\r\n    home: [AppState.UNKNOWN, AppState.PRODUCTSVIEW, AppState.PRODUCTVIEW],\r\n    products: [AppState.HOMEVIEW, AppState.PRODUCTVIEW],\r\n    product: [AppState.PRODUCTSVIEW]\r\n}\r\n\r\n/** \r\n * Configure the process that should be triggered when a pre-event is raised\r\n * The functions used here can also be imported from individual files\r\n * These functions pre-fetch data so the Angular component can load fast\r\n * These functions can, optionally, check user role for authorization\r\n */\r\nexport const PreEventToProcessConfig = {\r\n    home: {\r\n        process: function (appEventModel: AppEventModel, appDataStore: AppDataStoreService):\r\n            AppEventModel {\r\n            //TODO: check whether the user is signed in and has required ROLE\r\n            //TODO: pre-fetch data if needed \r\n            appEventModel.appEvent = AppEvent.home_success;\r\n            return appEventModel;\r\n        }\r\n    },\r\n    products: {\r\n        process: function (appEventModel: AppEventModel, appDataStore: AppDataStoreService): \r\n            AppEventModel {\r\n            //TODO: check whether the user is signed in and has required ROLE\r\n            const appData = new AppData();\r\n            appData.products = appDataStore.getProducts();\r\n            appEventModel.appData = appData;\r\n            appEventModel.appEvent = AppEvent.products_success;\r\n            return appEventModel;\r\n        }\r\n    },\r\n    product: {\r\n        process: function (appEventModel: AppEventModel, appDataStore: AppDataStoreService): \r\n            AppEventModel {\r\n            //TODO: check whether the user is signed in and has required ROLE\r\n            const appData = new AppData();\r\n            appData.product = appDataStore.getProduct(appEventModel.appData.product.id);\r\n            appEventModel.appData = appData;\r\n            appEventModel.appEvent = AppEvent.product_success;\r\n            return appEventModel;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Configure the post-event to final state mappings\r\n */\r\nexport const PostEventToFinalStateConfig = {\r\n    home_success: AppState.HOMEVIEW,\r\n    products_success: AppState.PRODUCTSVIEW,\r\n    product_success: AppState.PRODUCTVIEW\r\n}\r\n\r\n/**\r\n * Configure final state to path mappings\r\n */\r\nexport const FinalStateToPathConfig = {\r\n    HOMEVIEW: \"home\",\r\n    PRODUCTSVIEW: \"products\",\r\n    PRODUCTVIEW: \"product\",\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseComponent } from '../base/base.component';\r\nimport { AppEventModel } from '../state-transitions-config/app-event.model';\r\nimport { PostEventToFinalStateConfig, \r\n         FinalStateToPathConfig, \r\n         PreEventToInitialStatesConfig, \r\n         PreEventToProcessConfig } from '../state-transitions-config/state-transitions';\r\nimport { AppDataStoreService } from './app-data-store.service';\r\n\r\n/**\r\n * This Angular component acts as a broker that receives all the events raised in the\r\n * application, triggers the configued process function and based on the function's\r\n * response route the request to the configured path. It uses the configurations\r\n * listed in state-transitions.ts\r\n */\r\n@Component({\r\n  selector: 'app-state-transitions-manager',\r\n  template: ``\r\n})\r\nexport class StateTransitionsManagerComponent extends BaseComponent implements OnInit {\r\n\r\n  constructor(protected router: Router, private appDataStore: AppDataStoreService) {\r\n    super(router);\r\n  }\r\n\r\n  /**\r\n   * When an application's pre-event is received this component\r\n   * 1. Checks whether the pre-event is raised from a valid application state\r\n   * 2. Triggers the process configured for this pre-event\r\n   * 3. Figures the path corresponding to the post-state returned by the process\r\n   * 4. Routes the request including an AppEventModel\r\n   */\r\n  ngOnInit(): void {\r\n    this.doTransition(this.appEventModel, this.appDataStore);\r\n  }\r\n\r\n  private doTransition(appEventModel: AppEventModel, appDataStore: AppDataStoreService) {\r\n    if (this.isPreEventOriginValid(appEventModel)) {\r\n      appEventModel = this.callProcess(appEventModel, appDataStore);\r\n      appEventModel.appState = PostEventToFinalStateConfig[appEventModel.appEvent];\r\n      const path = FinalStateToPathConfig[appEventModel.appState];\r\n      appDataStore.setCurrentView(appEventModel.appState);\r\n      this.router.navigate([path], { state: { appEvent: appEventModel } });\r\n    } else {\r\n      this.router.navigate([\"/**\"]);\r\n    }\r\n  }\r\n\r\n  private isPreEventOriginValid(appEventModel: AppEventModel): boolean {\r\n    return appEventModel && appEventModel.appEvent && appEventModel.appState &&\r\n    PreEventToInitialStatesConfig[appEventModel.appEvent].includes(appEventModel.appState);\r\n  }\r\n\r\n  private callProcess(appEventModel: AppEventModel, appDataStore: AppDataStoreService): AppEventModel {\r\n    return appEventModel = PreEventToProcessConfig[appEventModel.appEvent]\r\n    .process(appEventModel, appDataStore);\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseComponent } from '../../base/base.component';\r\nimport { AppState } from '../../state-transitions-config/app-states.enum';\r\nimport { Product } from '../product.model';\r\n\r\n/**\r\n * This Angular component displays a list of\r\n * available products\r\n */\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.css']\r\n})\r\nexport class ProductComponent extends BaseComponent implements OnInit {\r\n\r\n  product: Product;\r\n\r\n  constructor(protected router: Router) {\r\n    super(router);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.product = this.appEventModel.appData.product;\r\n  }\r\n\r\n  // a handler for the user raised event\r\n  // delegate the event handling to the base class\r\n  handlePoductsEvent(evt: string) {\r\n    this.handleAppEvent(evt, AppState.PRODUCTVIEW);\r\n  }\r\n}\r\n","\n<h4>Product Details</h4>\n\n  {{product.name}} Price: {{product.price}}\n<br>\n<hr>\n<br>\n  <button (click)=\"handlePoductsEvent('products')\">Back to Products</button>\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { Product } from '../product/product.model';\r\nimport { ProductsService } from '../product/products.service';\r\nimport { AppState } from '../state-transitions-config/app-states.enum';\r\n\r\n/**\r\n * This injectable service retries and stores the data requested\r\n * This service can, optionally, cache the data as needed\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppDataStoreService {\r\n\r\n  protected productsStore = new BehaviorSubject<Product[]>([]);\r\n  protected productStore = new BehaviorSubject<Product>(null);\r\n  protected currentState = new BehaviorSubject<AppState>(AppState.UNKNOWN);\r\n  public currentState$ = this.currentState.asObservable();\r\n\r\n  constructor(protected productsService: ProductsService) { }\r\n\r\n  setCurrentView(appState: AppState) {\r\n    this.currentState.next(appState);\r\n  }\r\n\r\n  getCurrentView(): AppState {\r\n    return this.currentState.getValue();\r\n  }\r\n\r\n  public setProducts(products: Product[]) {\r\n    this.productsStore.next(products);\r\n  }\r\n\r\n  getProducts(): Product[] {\r\n    this.loadProducts();\r\n    return this.productsStore.getValue();\r\n  }\r\n\r\n  setProduct(product: Product) {\r\n    this.productStore.next(product);\r\n  }\r\n\r\n  getProduct(id: number): Product {\r\n    this.loadProduct(id);\r\n    return this.productStore.getValue();\r\n  }\r\n\r\n  loadProducts() {\r\n    this.productsService.getProducts().pipe(take(1)).subscribe(res => this.setProducts(res));\r\n  }\r\n\r\n  loadProduct(id: any) {\r\n    this.productsService.getProduct(id).pipe(take(1)).subscribe(res => this.setProduct(res));\r\n  }\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n/**\r\n * This Angular component just loads the layout component\r\n */\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html',\r\n  styleUrls: ['app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  title = \"A New Approach to Angular Development\";\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() { }\r\n}\r\n","<app-layout></app-layout>","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { ProductsComponent } from './product/products/products.component';\r\nimport { ProductComponent } from './product/product/product.component';\r\nimport { BaseComponent } from './base/base.component';\r\nimport { LayoutComponent } from './layout/layout.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    PageNotFoundComponent,\r\n    ProductsComponent,\r\n    ProductComponent,\r\n    BaseComponent,\r\n    LayoutComponent\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule {\r\n  // Diagnostic only: inspect router configuration\r\n  constructor() {\r\n    // Use a custom replacer to display function names in the route configs\r\n    // const replacer = (key, value) => (typeof value === 'function') ? value.name : value;\r\n\r\n    // console.log('Routes: ', JSON.stringify(router.config, replacer, 2));\r\n  }\r\n}\r\n","\r\nexport enum AppEvent {\r\n    home = \"home\",\r\n    home_success = \"home_success\",\r\n    products = \"products\",\r\n    products_success = \"products_success\",\r\n    product = \"product\",\r\n    product_success = \"product_success\"\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { AppData } from '../state-transitions-config/app-data.model';\nimport { AppEventModel } from '../state-transitions-config/app-event.model';\nimport { AppEvent } from '../state-transitions-config/app-events.enum';\nimport { AppState } from '../state-transitions-config/app-states.enum';\n\n/**\n * This Angular base component ensures that all navigation\n * requests are routed through the StateTransitionsManagerComponent.\n * Otherwise, the user is redirected to the home page.\n */\n@Component({\n  selector: 'app-base', template: ``\n})\nexport class BaseComponent implements OnInit {\n  protected appEventModel: AppEventModel;\n\n  constructor(protected router: Router) {\n    if (this.router.getCurrentNavigation()) {\n      const navigationExtras: NavigationExtras = this.router.getCurrentNavigation().extras;\n      if (navigationExtras && navigationExtras.state) {\n        this.appEventModel = navigationExtras.state.appEvent;\n      } \n    }\n  }\n\n  ngOnInit(): void { }\n\n  protected handleAppEvent(evt: string, appState: AppState, appData?: AppData) {\n    if (evt && this.appEventModel) {\n      this.appEventModel.appEvent = AppEvent[evt];\n      this.appEventModel.appState = appState;\n      if (appData) this.appEventModel.appData = appData;\n    }\n    this.router.navigate(['/state-transitions-manager'], { state: { appEvent: this.appEventModel } });\n  }\n}\n","\r\nexport enum AppState {\r\n    UNKNOWN = \"UNKNOWN\",\r\n    HOMEVIEW = \"HOMEVIEW\",\r\n    PRODUCTSVIEW = \"PRODUCTSVIEW\",\r\n    PRODUCTVIEW = \"PRODUCTVIEW\"\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseComponent } from '../base/base.component';\r\n\r\n/**\r\n * This Angular component displays an error message\r\n * when the navigation request does not conform to one of the\r\n * the valid state transitions.\r\n */\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent extends BaseComponent implements OnInit {\r\n\r\n  message = '';\r\n\r\n  constructor(protected router: Router) {\r\n    super(router);\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.appEventModel) {\r\n      this.message = this.appEventModel.message.error;\r\n    } else {\r\n      this.message = 'Unknown access error';\r\n    }\r\n  }\r\n}\r\n","<h2>Page not found</h2>\r\n<p>{{message}}</p>","import { Product } from '../product/product.model';\r\n\r\nexport class AppData {\r\n    products: Product[] = [];\r\n    product: Product = new Product();\r\n}\r\n\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { BaseComponent } from '../base/base.component';\nimport { AppEventModel } from '../state-transitions-config/app-event.model';\nimport { AppState } from '../state-transitions-config/app-states.enum';\nimport { AppDataStoreService } from '../state-transitions-manager/app-data-store.service';\n\n/**\n * This Angular component loads the home page with a\n * site layout. Enables navigating to all other views.\n */\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LayoutComponent extends BaseComponent implements OnInit {\n\n  title = \"A New Approach to Angular Development\";\n  currentState$: Observable<AppState>;\n  isProducts = false;\n\n  constructor(protected router: Router, private appDataStoreService: AppDataStoreService) {\n    super(router);\n    this.currentState$ = appDataStoreService.currentState$;\n  }\n\n  ngOnInit(): void {\n    // load the home page content\n    this.appEventModel = new AppEventModel();\n    this.handleAppEvent('home', AppState.UNKNOWN);\n  }\n\n  // a handler for the user raised event\n  // delegate the event handling to the base class\n  handleHomeEvent(evt: string) {\n    this.handleAppEvent(evt, this.appDataStoreService.getCurrentView());\n  }\n\n  // a handler for the user raised event\n  // delegate the event handling to the base class\n  handleProductsEvent(evt: string) {\n    this.handleAppEvent(evt, this.appDataStoreService.getCurrentView());\n  }\n}\n","<section class=\"leftm2\">\n  <h2 class=\"title\">Fancy Products Store</h2>\n  <section>\n    <button (click)=\"handleHomeEvent('home')\" class=\"mrgn1\" [disabled]=\"(currentState$ | async) === 'HOMEVIEW'\">Home</button>\n    <button (click)=\"handleProductsEvent('products')\" class=\"mrgn1\"[disabled]=\"(currentState$ | async) === 'PRODUCTSVIEW'\">Products</button>\n  </section>\n  <hr>\n</section>\n<section class=\"leftm2\">\n  <section class=\"leftm2\">\n    <router-outlet></router-outlet>\n  </section>\n</section>","export class Product {\r\n    id: number;\r\n    name: string = \"\";\r\n    price: number = 0.00;\r\n\r\n    constructor(id?: number, name?: string, price?: number) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.price = price;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { StateTransitionsManagerComponent } from './state-transitions-manager/state-transitions-manager.component';\r\nimport { ProductsComponent } from './product/products/products.component';\r\nimport { ProductComponent } from './product/product/product.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'product', component: ProductComponent },\r\n  { path: 'products', component: ProductsComponent },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'state-transitions-manager', component: StateTransitionsManagerComponent },\r\n  { path: '',   redirectTo: '/home', pathMatch: 'full' },\r\n  { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { Product } from './product.model';\r\n\r\n/**\r\n * This injectable service typically calls external REST services to get the data\r\n * Here we use hard-coded data for demo purposes\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n\r\n  productsCount: number = 0;\r\n\r\n  constructor() { }\r\n\r\n  // Returns hard-coded data for demo purposes\r\n  public getProducts(): Observable<Product[]> {\r\n    //TODO: call a REST service to get the products\r\n    return of([new Product(1, \"product_1\", 11.11), new Product(2, \"product_2\", 22.22)]);\r\n  }\r\n\r\n  // Returns hard-coded data for demo purposes\r\n  public getProduct(id: any): Observable<Product> {\r\n    //TODO: call a REST service to get the product\r\n    return of(new Product(id, \"product_\" + id, 11.11*id));\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}